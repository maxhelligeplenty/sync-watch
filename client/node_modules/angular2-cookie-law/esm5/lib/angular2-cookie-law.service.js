/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * angular2-cookie-law
 *
 * Copyright 2016-2018, @andreasonny83, All rights reserved.
 *
 * @author: @andreasonny83 <andreasonny83@gmail.com>
 */
import { Inject, Injectable, PLATFORM_ID } from '@angular/core';
import { DOCUMENT, isPlatformBrowser } from '@angular/common';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
var Angular2CookieLawService = /** @class */ (function () {
    function Angular2CookieLawService(doc, platform) {
        this.doc = doc;
        this.platform = platform;
    }
    /**
     * @param {?=} cookieName
     * @return {?}
     */
    Angular2CookieLawService.prototype.seen = /**
     * @param {?=} cookieName
     * @return {?}
     */
    function (cookieName) {
        if (cookieName === void 0) { cookieName = 'cookieLawSeen'; }
        var /** @type {?} */ cookies = [];
        if (isPlatformBrowser(this.platform)) {
            cookies = this.doc.cookie.split(';');
        }
        return this.cookieExisits(cookieName, cookies);
    };
    /**
     * @param {?} cookieName
     * @param {?=} expiration
     * @return {?}
     */
    Angular2CookieLawService.prototype.storeCookie = /**
     * @param {?} cookieName
     * @param {?=} expiration
     * @return {?}
     */
    function (cookieName, expiration) {
        return this.setCookie(cookieName, expiration);
    };
    /**
     * @param {?} name
     * @param {?} cookies
     * @return {?}
     */
    Angular2CookieLawService.prototype.cookieExisits = /**
     * @param {?} name
     * @param {?} cookies
     * @return {?}
     */
    function (name, cookies) {
        var /** @type {?} */ cookieName = name + "=";
        return cookies.reduce(function (prev, curr) { return prev || curr.trim().search(cookieName) > -1; }, false);
    };
    /**
     * @param {?} name
     * @param {?=} expiration
     * @return {?}
     */
    Angular2CookieLawService.prototype.setCookie = /**
     * @param {?} name
     * @param {?=} expiration
     * @return {?}
     */
    function (name, expiration) {
        var /** @type {?} */ now = new Date();
        var /** @type {?} */ exp = new Date(now.getTime() + expiration * 86400000);
        var /** @type {?} */ cookieString = encodeURIComponent(name) + ("=true;path=/;expires=" + exp.toUTCString() + ";");
        if (isPlatformBrowser(this.platform)) {
            this.doc.cookie = cookieString;
        }
    };
    Angular2CookieLawService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] },
    ];
    /** @nocollapse */
    Angular2CookieLawService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },
        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },
    ]; };
    /** @nocollapse */ Angular2CookieLawService.ngInjectableDef = i0.defineInjectable({ factory: function Angular2CookieLawService_Factory() { return new Angular2CookieLawService(i0.inject(i1.DOCUMENT), i0.inject(i0.PLATFORM_ID)); }, token: Angular2CookieLawService, providedIn: "root" });
    return Angular2CookieLawService;
}());
export { Angular2CookieLawService };
function Angular2CookieLawService_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    Angular2CookieLawService.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    Angular2CookieLawService.ctorParameters;
    /** @type {?} */
    Angular2CookieLawService.prototype.doc;
    /** @type {?} */
    Angular2CookieLawService.prototype.platform;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcjItY29va2llLWxhdy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhcjItY29va2llLWxhdy8iLCJzb3VyY2VzIjpbImxpYi9hbmd1bGFyMi1jb29raWUtbGF3LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFRQSxPQUFPLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDaEUsT0FBTyxFQUFFLFFBQVEsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7O0lBTTVELGtDQUM0QixLQUNHO1FBREgsUUFBRyxHQUFILEdBQUc7UUFDQSxhQUFRLEdBQVIsUUFBUTtLQUNuQzs7Ozs7SUFFRyx1Q0FBSTs7OztjQUFDLFVBQW9DO1FBQXBDLDJCQUFBLEVBQUEsNEJBQW9DO1FBQzlDLHFCQUFJLE9BQU8sR0FBa0IsRUFBRSxDQUFDO1FBRWhDLEVBQUUsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckMsT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUN0QztRQUVELE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsRUFBRSxPQUFPLENBQUMsQ0FBQzs7Ozs7OztJQUcxQyw4Q0FBVzs7Ozs7Y0FBQyxVQUFrQixFQUFFLFVBQW1CO1FBQ3hELE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsRUFBRSxVQUFVLENBQUMsQ0FBQzs7Ozs7OztJQUd4QyxnREFBYTs7Ozs7Y0FBQyxJQUFZLEVBQUUsT0FBc0I7UUFDeEQscUJBQU0sVUFBVSxHQUFNLElBQUksTUFBRyxDQUFDO1FBRTlCLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUNuQixVQUFDLElBQUksRUFBRSxJQUFJLElBQUssT0FBQSxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBM0MsQ0FBMkMsRUFDM0QsS0FBSyxDQUNOLENBQUM7Ozs7Ozs7SUFHSSw0Q0FBUzs7Ozs7Y0FBQyxJQUFZLEVBQUUsVUFBbUI7UUFDakQscUJBQU0sR0FBRyxHQUFTLElBQUksSUFBSSxFQUFFLENBQUM7UUFDN0IscUJBQU0sR0FBRyxHQUFTLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsR0FBRyxVQUFVLEdBQUcsUUFBUSxDQUFDLENBQUM7UUFFbEUscUJBQU0sWUFBWSxHQUNoQixrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBRywwQkFBd0IsR0FBRyxDQUFDLFdBQVcsRUFBRSxNQUFHLENBQUEsQ0FBQztRQUUxRSxFQUFFLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3JDLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFHLFlBQVksQ0FBQztTQUNoQzs7O2dCQXpDSixVQUFVLFNBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzs7O2dEQUdJLE1BQU0sU0FBQyxRQUFROzZDQUNmLE1BQU0sU0FBQyxXQUFXOzs7bUNBakJ2Qjs7U0FjYSx3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIGFuZ3VsYXIyLWNvb2tpZS1sYXdcbiAqXG4gKiBDb3B5cmlnaHQgMjAxNi0yMDE4LCBAYW5kcmVhc29ubnk4MywgQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBAYXV0aG9yOiBAYW5kcmVhc29ubnk4MyA8YW5kcmVhc29ubnk4M0BnbWFpbC5jb20+XG4gKi9cblxuaW1wb3J0IHsgSW5qZWN0LCBJbmplY3RhYmxlLCBQTEFURk9STV9JRCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRE9DVU1FTlQsIGlzUGxhdGZvcm1Ccm93c2VyIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgQW5ndWxhcjJDb29raWVMYXdTZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdChET0NVTUVOVCkgcHJpdmF0ZSBkb2M6IGFueSxcbiAgICBASW5qZWN0KFBMQVRGT1JNX0lEKSBwcml2YXRlIHBsYXRmb3JtOiBPYmplY3RcbiAgKSB7fVxuXG4gIHB1YmxpYyBzZWVuKGNvb2tpZU5hbWU6IHN0cmluZyA9ICdjb29raWVMYXdTZWVuJyk6IGJvb2xlYW4ge1xuICAgIGxldCBjb29raWVzOiBBcnJheTxzdHJpbmc+ID0gW107XG5cbiAgICBpZiAoaXNQbGF0Zm9ybUJyb3dzZXIodGhpcy5wbGF0Zm9ybSkpIHtcbiAgICAgIGNvb2tpZXMgPSB0aGlzLmRvYy5jb29raWUuc3BsaXQoJzsnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5jb29raWVFeGlzaXRzKGNvb2tpZU5hbWUsIGNvb2tpZXMpO1xuICB9XG5cbiAgcHVibGljIHN0b3JlQ29va2llKGNvb2tpZU5hbWU6IHN0cmluZywgZXhwaXJhdGlvbj86IG51bWJlcik6IHZvaWQge1xuICAgIHJldHVybiB0aGlzLnNldENvb2tpZShjb29raWVOYW1lLCBleHBpcmF0aW9uKTtcbiAgfVxuXG4gIHByaXZhdGUgY29va2llRXhpc2l0cyhuYW1lOiBzdHJpbmcsIGNvb2tpZXM6IEFycmF5PHN0cmluZz4pOiBib29sZWFuIHtcbiAgICBjb25zdCBjb29raWVOYW1lID0gYCR7bmFtZX09YDtcblxuICAgIHJldHVybiBjb29raWVzLnJlZHVjZShcbiAgICAgIChwcmV2LCBjdXJyKSA9PiBwcmV2IHx8IGN1cnIudHJpbSgpLnNlYXJjaChjb29raWVOYW1lKSA+IC0xLFxuICAgICAgZmFsc2VcbiAgICApO1xuICB9XG5cbiAgcHJpdmF0ZSBzZXRDb29raWUobmFtZTogc3RyaW5nLCBleHBpcmF0aW9uPzogbnVtYmVyKTogdm9pZCB7XG4gICAgY29uc3Qgbm93OiBEYXRlID0gbmV3IERhdGUoKTtcbiAgICBjb25zdCBleHA6IERhdGUgPSBuZXcgRGF0ZShub3cuZ2V0VGltZSgpICsgZXhwaXJhdGlvbiAqIDg2NDAwMDAwKTtcblxuICAgIGNvbnN0IGNvb2tpZVN0cmluZyA9XG4gICAgICBlbmNvZGVVUklDb21wb25lbnQobmFtZSkgKyBgPXRydWU7cGF0aD0vO2V4cGlyZXM9JHtleHAudG9VVENTdHJpbmcoKX07YDtcblxuICAgIGlmIChpc1BsYXRmb3JtQnJvd3Nlcih0aGlzLnBsYXRmb3JtKSkge1xuICAgICAgdGhpcy5kb2MuY29va2llID0gY29va2llU3RyaW5nO1xuICAgIH1cbiAgfVxufVxuIl19