{"version":3,"sources":["app/service/youtube-video-data.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAA2C;AAE3C,6CAG8B;AAE9B,IAAM,MAAM,GAAG,yCAAyC,CAAC;AAGzD;IAII,iCAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAE/B,IAAI,CAAC,OAAO,GAAG,IAAI,kBAAW,EAAE,CAAC;IACrC,CAAC;IAEM,kDAAgB,GAAvB,UAAwB,OAAc;QAElC,IAAI,GAAG,GAAU,oEAAoE,GAAG,OAAO,GAAG,OAAO,GAAG,MAAM,CAAC;QACnH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAChB,GAAG,EACH;YACI,OAAO,EAAE,IAAI,CAAC,OAAO;SACxB,CACJ,CAAA;IACL,CAAC;IAlBQ,uBAAuB;QADnC,iBAAU,EAAE;yCAKgB,iBAAU;OAJ1B,uBAAuB,CAmBnC;IAAD,8BAAC;CAnBD,AAmBC,IAAA;AAnBY,0DAAuB","file":"app/service/youtube-video-data.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n    HttpClient,\n    HttpHeaders\n} from '@angular/common/http';\n\nconst apiKey = 'AIzaSyAFK1fv9hExPRj8Io9nXaVRoHkwzRo0VwM';\n\n@Injectable()\nexport class YoutubeVideoDataService\n{\n    private headers:HttpHeaders;\n\n    constructor(private http:HttpClient)\n    {\n        this.headers = new HttpHeaders();\n    }\n\n    public getVideoInfoById(videoId:string):Observable<any>\n    {\n        let url:string = 'https://www.googleapis.com/youtube/v3/videos?part=id%2Csnippet&id=' + videoId + '&key=' + apiKey;\n        return this.http.get(\n            url,\n            {\n                headers: this.headers\n            }\n        )\n    }\n}\n"],"sourceRoot":"/source/"}