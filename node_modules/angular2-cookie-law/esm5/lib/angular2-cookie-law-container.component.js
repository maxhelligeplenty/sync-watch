/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * angular2-cookie-law
 *
 * Copyright 2016-2018, @andreasonny83, All rights reserved.
 *
 * @author: @andreasonny83 <andreasonny83@gmail.com>
 */
import { Component, ViewChild, HostBinding, Input, Output, EventEmitter } from '@angular/core';
import { Angular2CookieLawService } from './angular2-cookie-law.service';
import { CookieLawComponent } from './angular2-cookie-law.component';
var CookieLawContainerComponent = /** @class */ (function () {
    function CookieLawContainerComponent(cookieLawService) {
        this.cookieLawService = cookieLawService;
        this.isSeen = new EventEmitter();
        this.name = 'cookieLawSeen'; // set a default cookie name if not provided
        this.seen = true;
    }
    Object.defineProperty(CookieLawContainerComponent.prototype, "cookieLawSeen", {
        get: /**
         * @return {?}
         */
        function () {
            return this.cookieLawService.seen(this.name);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    CookieLawContainerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.seen = this.cookieLawService.seen(this.name);
    };
    /**
     * @return {?}
     */
    CookieLawContainerComponent.prototype.hasBeenDismissed = /**
     * @return {?}
     */
    function () {
        this.cookieLawService.storeCookie(this.name, this.expiration);
        this.seen = true;
        this.isSeen.emit(true);
    };
    /**
     * @return {?}
     */
    CookieLawContainerComponent.prototype.dismiss = /**
     * @return {?}
     */
    function () {
        this.cookieLawComponent.dismiss();
    };
    CookieLawContainerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'cookie-law',
                    template: "\n    <cookie-law-component\n      *ngIf=\"!seen\"\n      [awsomeCloseIcon]=\"awsomeCloseIcon\"\n      [learnMore]=\"learnMore\"\n      [target]=\"target\"\n      [position]=\"position\"\n      (isSeen)=\"hasBeenDismissed()\"\n    >\n      <ng-content></ng-content>\n    </cookie-law-component>\n  "
                },] },
    ];
    /** @nocollapse */
    CookieLawContainerComponent.ctorParameters = function () { return [
        { type: Angular2CookieLawService, },
    ]; };
    CookieLawContainerComponent.propDecorators = {
        "seen": [{ type: HostBinding, args: ['attr.seen',] },],
        "cookieLawComponent": [{ type: ViewChild, args: [CookieLawComponent,] },],
        "name": [{ type: Input },],
        "learnMore": [{ type: Input },],
        "target": [{ type: Input },],
        "position": [{ type: Input },],
        "expiration": [{ type: Input },],
        "awsomeCloseIcon": [{ type: Input },],
        "isSeen": [{ type: Output },],
    };
    return CookieLawContainerComponent;
}());
export { CookieLawContainerComponent };
function CookieLawContainerComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    CookieLawContainerComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    CookieLawContainerComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    CookieLawContainerComponent.propDecorators;
    /** @type {?} */
    CookieLawContainerComponent.prototype.seen;
    /** @type {?} */
    CookieLawContainerComponent.prototype.cookieLawComponent;
    /** @type {?} */
    CookieLawContainerComponent.prototype.name;
    /** @type {?} */
    CookieLawContainerComponent.prototype.learnMore;
    /** @type {?} */
    CookieLawContainerComponent.prototype.target;
    /** @type {?} */
    CookieLawContainerComponent.prototype.position;
    /** @type {?} */
    CookieLawContainerComponent.prototype.expiration;
    /** @type {?} */
    CookieLawContainerComponent.prototype.awsomeCloseIcon;
    /** @type {?} */
    CookieLawContainerComponent.prototype.isSeen;
    /** @type {?} */
    CookieLawContainerComponent.prototype.cookieLawService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcjItY29va2llLWxhdy1jb250YWluZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhcjItY29va2llLWxhdy8iLCJzb3VyY2VzIjpbImxpYi9hbmd1bGFyMi1jb29raWUtbGF3LWNvbnRhaW5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFRQSxPQUFPLEVBQ0wsU0FBUyxFQUVULFNBQVMsRUFDVCxXQUFXLEVBQ1gsS0FBSyxFQUNMLE1BQU0sRUFDTixZQUFZLEVBQ2IsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDekUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUNBQWlDLENBQUM7O0lBa0RuRSxxQ0FBb0IsZ0JBQTBDO1FBQTFDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBMEI7c0JBTjlDLElBQUksWUFBWSxFQUFXO1FBT3pDLElBQUksQ0FBQyxJQUFJLEdBQUcsZUFBZSxDQUFDO1FBQzVCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0tBQ2xCOzBCQVBVLHNEQUFhOzs7OztZQUN0QixNQUFNLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Ozs7Ozs7O0lBUXhDLDhDQUFROzs7O1FBQ2IsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzs7Ozs7SUFHN0Msc0RBQWdCOzs7O1FBQ3JCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDOUQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Ozs7O0lBR2xCLDZDQUFPOzs7O1FBQ1osSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sRUFBRSxDQUFDOzs7Z0JBL0RyQyxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFlBQVk7b0JBQ3RCLFFBQVEsRUFBRSw0U0FXVDtpQkFDRjs7OztnQkFsQlEsd0JBQXdCOzs7eUJBb0I5QixXQUFXLFNBQUMsV0FBVzt1Q0FHdkIsU0FBUyxTQUFDLGtCQUFrQjt5QkFHNUIsS0FBSzs4QkFHTCxLQUFLOzJCQUdMLEtBQUs7NkJBR0wsS0FBSzsrQkFHTCxLQUFLO29DQUdMLEtBQUs7MkJBR0wsTUFBTTs7c0NBOURUOztTQXFDYSwyQkFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIGFuZ3VsYXIyLWNvb2tpZS1sYXdcbiAqXG4gKiBDb3B5cmlnaHQgMjAxNi0yMDE4LCBAYW5kcmVhc29ubnk4MywgQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBAYXV0aG9yOiBAYW5kcmVhc29ubnk4MyA8YW5kcmVhc29ubnk4M0BnbWFpbC5jb20+XG4gKi9cblxuaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBPbkluaXQsXG4gIFZpZXdDaGlsZCxcbiAgSG9zdEJpbmRpbmcsXG4gIElucHV0LFxuICBPdXRwdXQsXG4gIEV2ZW50RW1pdHRlclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQW5ndWxhcjJDb29raWVMYXdTZXJ2aWNlIH0gZnJvbSAnLi9hbmd1bGFyMi1jb29raWUtbGF3LnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29va2llTGF3Q29tcG9uZW50IH0gZnJvbSAnLi9hbmd1bGFyMi1jb29raWUtbGF3LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb29raWVMYXdUYXJnZXQsIENvb2tpZUxhd1Bvc2l0aW9uIH0gZnJvbSAnLi9kZWZpbml0aW9ucyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Nvb2tpZS1sYXcnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxjb29raWUtbGF3LWNvbXBvbmVudFxuICAgICAgKm5nSWY9XCIhc2VlblwiXG4gICAgICBbYXdzb21lQ2xvc2VJY29uXT1cImF3c29tZUNsb3NlSWNvblwiXG4gICAgICBbbGVhcm5Nb3JlXT1cImxlYXJuTW9yZVwiXG4gICAgICBbdGFyZ2V0XT1cInRhcmdldFwiXG4gICAgICBbcG9zaXRpb25dPVwicG9zaXRpb25cIlxuICAgICAgKGlzU2Vlbik9XCJoYXNCZWVuRGlzbWlzc2VkKClcIlxuICAgID5cbiAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICA8L2Nvb2tpZS1sYXctY29tcG9uZW50PlxuICBgXG59KVxuZXhwb3J0IGNsYXNzIENvb2tpZUxhd0NvbnRhaW5lckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBIb3N0QmluZGluZygnYXR0ci5zZWVuJylcbiAgcHVibGljIHNlZW46IGJvb2xlYW47XG5cbiAgQFZpZXdDaGlsZChDb29raWVMYXdDb21wb25lbnQpXG4gIHB1YmxpYyBjb29raWVMYXdDb21wb25lbnQ6IENvb2tpZUxhd0NvbXBvbmVudDtcblxuICBASW5wdXQoKVxuICBwdWJsaWMgbmFtZTogc3RyaW5nO1xuXG4gIEBJbnB1dCgpXG4gIHB1YmxpYyBsZWFybk1vcmU6IHN0cmluZztcblxuICBASW5wdXQoKVxuICBwdWJsaWMgdGFyZ2V0OiBDb29raWVMYXdUYXJnZXQ7XG5cbiAgQElucHV0KClcbiAgcHVibGljIHBvc2l0aW9uOiBDb29raWVMYXdQb3NpdGlvbjtcblxuICBASW5wdXQoKVxuICBwdWJsaWMgZXhwaXJhdGlvbjogbnVtYmVyO1xuXG4gIEBJbnB1dCgpXG4gIHB1YmxpYyBhd3NvbWVDbG9zZUljb246IHN0cmluZztcblxuICBAT3V0cHV0KClcbiAgcHVibGljIGlzU2VlbiA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcblxuICBwdWJsaWMgZ2V0IGNvb2tpZUxhd1NlZW4oKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuY29va2llTGF3U2VydmljZS5zZWVuKHRoaXMubmFtZSk7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvb2tpZUxhd1NlcnZpY2U6IEFuZ3VsYXIyQ29va2llTGF3U2VydmljZSkge1xuICAgIHRoaXMubmFtZSA9ICdjb29raWVMYXdTZWVuJzsgLy8gc2V0IGEgZGVmYXVsdCBjb29raWUgbmFtZSBpZiBub3QgcHJvdmlkZWRcbiAgICB0aGlzLnNlZW4gPSB0cnVlO1xuICB9XG5cbiAgcHVibGljIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2VlbiA9IHRoaXMuY29va2llTGF3U2VydmljZS5zZWVuKHRoaXMubmFtZSk7XG4gIH1cblxuICBwdWJsaWMgaGFzQmVlbkRpc21pc3NlZCgpOiB2b2lkIHtcbiAgICB0aGlzLmNvb2tpZUxhd1NlcnZpY2Uuc3RvcmVDb29raWUodGhpcy5uYW1lLCB0aGlzLmV4cGlyYXRpb24pO1xuICAgIHRoaXMuc2VlbiA9IHRydWU7XG4gICAgdGhpcy5pc1NlZW4uZW1pdCh0cnVlKTtcbiAgfVxuXG4gIHB1YmxpYyBkaXNtaXNzKCk6IHZvaWQge1xuICAgIHRoaXMuY29va2llTGF3Q29tcG9uZW50LmRpc21pc3MoKTtcbiAgfVxufVxuIl19